name: Build pip package
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  build-publish:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@main
      
      - name: Get version
        run: |
          make -C hail python-version-info
          VERSION=$(cat hail/python/hail/hail_version)
          VERSION=${VERSION/-/.dev}
          echo "version=$VERSION" >> $GITHUB_ENV

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: buildenv
          channels: cpg,conda-forge,bioconda,defaults
          channel-priority: true
          python-version: 3.9

      - name: Setup build env
        run: conda install pip conda-build anaconda-client

      # Reading pip requirements and adding them into the conda recipe,
      # also setting the package version and pinning pyspark:
      - name: Render conda recipe
        run: |
          make -C hail env/SPARK_VERSION
          python conda/render_recipe.py ${{ env.version }}

      - name: Build conda package
        run: |
          conda-build conda/hail --variants "{'python': ['3.9', '3.10']}"

      # Remove old packages to save space on anaconda
      - name: Remove old versions
        # Only run this step once - that's why limiting to the ubuntu run:
        if: ${{ matrix.os == 'ubuntu-latest' && github.event_name == 'push' }}
        run: |
          # Keep 8 latest versions
          KEEP=8
          anaconda -t ${{ secrets.ANACONDA_TOKEN }} show cpg/cpg_hail 2>&1 \
          | grep "^   +" | head -n-${KEEP} | sed 's#   \+ ##' \
          | xargs -I '{}' -L1 echo anaconda -t ${{ secrets.ANACONDA_TOKEN }} remove -f cpg/cpg_hail/{}

      - name: Upload to anaconda package repository
        if: ${{ github.event_name == 'push' }}
        run: |
          anaconda -t ${{ secrets.ANACONDA_TOKEN }} \
          upload ${CONDA_PREFIX}/conda-bld/**/*.tar.bz2  

      - name: Redeploy the analysis-server
        # Only run this step once - that's why limiting to the ubuntu run:
        if: ${{ matrix.os == 'ubuntu-latest' && github.event_name == 'push' }}
        run: |
          curl --fail --silent --show-error -X POST \
            -H "Authorization: token ${{ secrets.ANALYSIS_SERVER_GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/populationgenomics/analysis-runner/actions/workflows/6364059/dispatches \
            -d '{"ref": "main", "inputs": {"hail_version": "${{ env.version }}"}}'
