name: Build pip package
on:
  pull_request:
  push:
    branches:
      - main
      - fix-conda2
jobs:
  build-publish:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@main

      - uses: actions/setup-python@v2
      
      # Setting package version as an env variable.
      # Pip is strict to the version tags and requires them to only having 
      # numerical sections (besides standard .post, .dev keywords).
      # the `hail_version` format with a git tag like 0.2.83-87e2e0e6ad4f and 
      # it won't work due to the arbitrary non-numerical git SHA.
      # So our pip package will have a simplier format: 0.2.83. That's why we will 
      # also set the --skip-existing flag for twine, in case if we re-run CI for 
      # the same version tag.
      - name: Get version
        run: |
          make -C hail python-version-info
          VERSION=$(cat hail/python/hail/hail_pip_version)
          VERSION=${VERSION/-/.dev}
          echo "version=$VERSION" >> $GITHUB_ENV

      # Building pip package.
      # Pypi doesn't have channels like conda, so building the package 
      # under the name "cpg-hail" to avoid clashes with the official package.
      - name: Build pip package
        run: |
          sed -i 's/name="hail",/name="cpg-hail",/' hail/python/setup.py
          make -C hail wheel

      - name: Upload the pip wheel
        if: ${{ matrix.os == 'ubuntu-latest' && github.event_name == 'push' }}
        run: twine upload --skip-existing build/deploy/dist/*

      - name: Redeploy the analysis-server
        # Only run this step once - that's why limiting to the ubuntu run:
        if: ${{ matrix.os == 'ubuntu-latest' && github.event_name == 'push' }}
        run: |
          curl --fail --silent --show-error -X POST \
            -H "Authorization: token ${{ secrets.ANALYSIS_SERVER_GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/populationgenomics/analysis-runner/actions/workflows/6364059/dispatches \
            -d '{"ref": "main", "inputs": {"hail_version": "${{ env.version }}"}}'
